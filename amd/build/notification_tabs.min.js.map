{"version":3,"file":"notification_tabs.min.js","sources":["../src/notification_tabs.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Module javascript to place new conditions.\n *\n * @module    notification_tabs\n * @category  Classes - autoloading\n * @copyright 2023, ISYC\n * @license   http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\nrequire(['core/copy_to_clipboard']);\n\ndefine([], function () {\n\n    /**\n     * FormCondition object.\n     * @param {String} idButton The button ID.\n     * @param {String} idSelect The select ID.\n     * @param {String} key Value for form.\n     */\n    var FormCondition = function (idButton, idSelect, key) {\n        this.init(idButton, idSelect, key);\n        this.registerEvents();\n    };\n\n    /** @var {Boolean} The FormCondition button selector. */\n    FormCondition.prototype.buttonSelector = false;\n\n    FormCondition.prototype.registerEvents = function () {\n        var self = this;\n        window.addEventListener(\"beforeunload\", (event) => {\n            if (self.buttonSelector) {\n                event.stopImmediatePropagation();\n            }\n            self.buttonSelector = false;\n        }, true);\n    }\n\n    FormCondition.prototype.init = function (idButton, idSelect, key) {\n        var self = this;\n\n        let button = document.querySelector('[id*=\"' + idButton + '\"]');\n        button.addEventListener('click', function () {\n            self.buttonSelector = true\n            let select = document.querySelector('[id*=\"' + idSelect + '\"]');\n\n            // if select option is AC\n            let selectDataset = select.options[select.selectedIndex].dataset;\n            if (selectDataset.type) {\n                let selectValue = select.options[select.selectedIndex].value;\n                document.getElementById(selectValue).click();\n                return\n            }\n\n            let $title = select.options[select.selectedIndex].text;\n            let $formDefault = [];\n\n            if (window.location.href.includes('action=edit')) {\n                let url = new URL(window.location.href);\n                var ruleid = url.searchParams.get('ruleid');\n                if (ruleid) {\n                    $formDefault.push(\"[id]ruleid[/id][value]\" + ruleid + \"[/value]\");\n                }\n            }\n\n            let formNotif = document.querySelector('form[action*=\"notificationsagent\"].mform');\n            Array.from(formNotif.elements).forEach((element) => {\n                if (element.id) {\n                    $formDefault.push(\"[id]\" + element.id + \"[/id][value]\" + element.value + \"[/value]\");\n                }\n            });\n            let $elements = JSON.parse(select.value.split(':')[1]);\n            let $name = select.options[select.selectedIndex].value.substring(0, select.options[select.selectedIndex].value.indexOf(':['));\n            let $availabilityconditionsjson = document.getElementById('id_availabilityconditionsjson').value\n            let data = {\n                key: key,\n                action: 'new',\n                title: $title,\n                elements: $elements,\n                name: $name,\n                formDefault: $formDefault,\n                availabilityconditionsjson: $availabilityconditionsjson\n            };\n\n            $.ajax({\n                type: \"POST\",\n                url: window.location.pathname.substring(0, '/local/notificationsagent/editrule.php'),\n                data: data,\n                success: function (event) {\n                    if (event.state === 'success') {\n                        window.location.reload();\n                    }\n                },\n                error: function (XMLHttpRequest, textStatus, errorThrown) {\n                    console.log(\"Status: \" + textStatus);\n                    console.log(errorThrown);\n                },\n                dataType: 'json'\n            });\n        });\n    };\n\n    return {\n\n        /**\n         * Main initialisation.\n         * @param {String} idButton The button ID.\n         * @param {String} idSelect The select ID.\n         * @param {String} key Value for form.\n         * @method init\n         */\n        init: function (idButton, idSelect, key) {\n            // Create instance.\n            new FormCondition(idButton, idSelect, key);\n        }\n\n    }\n});\n"],"names":["require","define","FormCondition","idButton","idSelect","key","init","registerEvents","prototype","buttonSelector","self","this","window","addEventListener","event","stopImmediatePropagation","document","querySelector","select","options","selectedIndex","dataset","type","selectValue","value","getElementById","click","$title","text","$formDefault","location","href","includes","ruleid","URL","searchParams","get","push","formNotif","Array","from","elements","forEach","element","id","$elements","JSON","parse","split","$name","substring","indexOf","$availabilityconditionsjson","data","action","title","name","formDefault","availabilityconditionsjson","$","ajax","url","pathname","success","state","reload","error","XMLHttpRequest","textStatus","errorThrown","console","log","dataType"],"mappings":";;;;;;;;AAwBAA,QAAQ,CAAC,2BAETC,oDAAO,IAAI,eAQHC,cAAgB,SAAUC,SAAUC,SAAUC,UACzCC,KAAKH,SAAUC,SAAUC,UACzBE,yBAITL,cAAcM,UAAUC,gBAAiB,EAEzCP,cAAcM,UAAUD,eAAiB,eACjCG,KAAOC,KACXC,OAAOC,iBAAiB,gBAAiBC,QACjCJ,KAAKD,gBACLK,MAAMC,2BAEVL,KAAKD,gBAAiB,KACvB,IAGPP,cAAcM,UAAUF,KAAO,SAAUH,SAAUC,SAAUC,SACrDK,KAAOC,KAEEK,SAASC,cAAc,SAAWd,SAAW,MACnDU,iBAAiB,SAAS,WAC7BH,KAAKD,gBAAiB,MAClBS,OAASF,SAASC,cAAc,SAAWb,SAAW,SAGtCc,OAAOC,QAAQD,OAAOE,eAAeC,QACvCC,KAAM,KAChBC,YAAcL,OAAOC,QAAQD,OAAOE,eAAeI,kBACvDR,SAASS,eAAeF,aAAaG,YAIrCC,OAAST,OAAOC,QAAQD,OAAOE,eAAeQ,KAC9CC,aAAe,MAEfjB,OAAOkB,SAASC,KAAKC,SAAS,eAAgB,KAE1CC,OADM,IAAIC,IAAItB,OAAOkB,SAASC,MACjBI,aAAaC,IAAI,UAC9BH,QACAJ,aAAaQ,KAAK,yBAA2BJ,OAAS,gBAI1DK,UAAYtB,SAASC,cAAc,4CACvCsB,MAAMC,KAAKF,UAAUG,UAAUC,SAASC,UAChCA,QAAQC,IACRf,aAAaQ,KAAK,OAASM,QAAQC,GAAK,eAAiBD,QAAQnB,MAAQ,mBAG7EqB,UAAYC,KAAKC,MAAM7B,OAAOM,MAAMwB,MAAM,KAAK,IAC/CC,MAAQ/B,OAAOC,QAAQD,OAAOE,eAAeI,MAAM0B,UAAU,EAAGhC,OAAOC,QAAQD,OAAOE,eAAeI,MAAM2B,QAAQ,OACnHC,4BAA8BpC,SAASS,eAAe,iCAAiCD,MACvF6B,KAAO,CACPhD,IAAKA,IACLiD,OAAQ,MACRC,MAAO5B,OACPc,SAAUI,UACVW,KAAMP,MACNQ,YAAa5B,aACb6B,2BAA4BN,6BAGhCO,EAAEC,KAAK,CACHtC,KAAM,OACNuC,IAAKjD,OAAOkB,SAASgC,SAASZ,UAAU,EAAG,0CAC3CG,KAAMA,KACNU,QAAS,SAAUjD,OACK,YAAhBA,MAAMkD,OACNpD,OAAOkB,SAASmC,UAGxBC,MAAO,SAAUC,eAAgBC,WAAYC,aACzCC,QAAQC,IAAI,WAAaH,YACzBE,QAAQC,IAAIF,cAEhBG,SAAU,aAKf,CASHlE,KAAM,SAAUH,SAAUC,SAAUC,SAE5BH,cAAcC,SAAUC,SAAUC"}