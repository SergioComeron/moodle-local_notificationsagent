{"version":3,"file":"notification_tabs.min.js","sources":["../src/notification_tabs.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <https://www.gnu.org/licenses/>.\n\n/**\n * Module javascript to place new conditions.\n *\n * @module    notification_tabs\n * @category  Classes - autoloading\n * @copyright 2023, ISYC\n * @license   http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\ndefine([], function () {\n\n    /**\n     * FormCondition object.\n     * @param {String} idButton The button ID.\n     * @param {String} idSelect The select ID.\n     */\n    class FormCondition {\n        constructor(idButton, idSelect) {\n            this.init(idButton, idSelect);\n        }\n        init(idButton, idSelect) {\n            var self = this;\n\n            let button = document.querySelector('[id*=\"' + idButton + '\"]');\n            button.addEventListener('click', function (ev) {\n                let select = document.querySelector('[id*=\"' + idSelect + '\"]');\n\n                // if select option is AC\n                let selectDataset = select.options[select.selectedIndex].dataset;\n                if (selectDataset.type) {\n                    ev.preventDefault();\n                    let selectValue = select.options[select.selectedIndex].value;\n                    document.getElementById(selectValue).click();\n                    return;\n                }\n            });\n        }\n    }\n\n    function initRemove (removeSpan, submitRemove) {\n        // Event to remove icon click\n        document.querySelectorAll('.'+removeSpan).forEach(function (link) {\n            link.addEventListener('click', function (e) {\n                let selector = document.querySelector('input[name=\"'+submitRemove+'\"]');\n                selector.value = e.target.id;\n                selector.click();\n            });\n        });\n    }\n\n\n    return {\n\n        /**\n         * Main initialisation.\n         * @param {String} idButton The button ID.\n         * @param {String} idSelect The select ID.\n         * @method init\n         */\n        init: function (idButton, idSelect) {\n            // Create instance.\n            new FormCondition(idButton, idSelect);\n        },\n        /**\n         * Remove initialisation.\n         * @param {String} removeSpan The span selector.\n         * @param {String} submitRemove The button name.\n         * @method init\n         */\n        initRemove: function (removeSpan, submitRemove) {\n            initRemove(removeSpan, submitRemove);\n        }\n    }\n});\n"],"names":["define","FormCondition","constructor","idButton","idSelect","init","document","querySelector","addEventListener","ev","select","options","selectedIndex","dataset","type","preventDefault","selectValue","value","getElementById","click","initRemove","removeSpan","submitRemove","querySelectorAll","forEach","link","e","selector","target","id"],"mappings":";;;;;;;;AAwBAA,oDAAO,IAAI,iBAODC,cACFC,YAAYC,SAAUC,eACbC,KAAKF,SAAUC,UAExBC,KAAKF,SAAUC,UAGEE,SAASC,cAAc,SAAWJ,SAAW,MACnDK,iBAAiB,SAAS,SAAUC,QACnCC,OAASJ,SAASC,cAAc,SAAWH,SAAW,SAGtCM,OAAOC,QAAQD,OAAOE,eAAeC,QACvCC,MACdL,GAAGM,qBACCC,YAAcN,OAAOC,QAAQD,OAAOE,eAAeK,MACvDX,SAASY,eAAeF,aAAaG,wBAmB9C,CAQHd,KAAM,SAAUF,SAAUC,cAElBH,cAAcE,SAAUC,WAQhCgB,WAAY,SAAUC,WAAYC,wBA9BjBD,WAAYC,cAE7BhB,SAASiB,iBAAiB,IAAIF,YAAYG,SAAQ,SAAUC,MACxDA,KAAKjB,iBAAiB,SAAS,SAAUkB,OACjCC,SAAWrB,SAASC,cAAc,eAAee,aAAa,MAClEK,SAASV,MAAQS,EAAEE,OAAOC,GAC1BF,SAASR,cAyBbC,CAAWC,WAAYC"}