{"version":3,"file":"notification_assigntemplate.min.js","sources":["../src/notification_assigntemplate.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <https://www.gnu.org/licenses/>.\n\n/**\n *\n * @module   local_notificationsagent/assigntemplate\n * @copyright 2023, ISYC\n * @license   http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\ndefine(['core/str'], function(str) {\n    /**\n     * Types of rule type\n     * \n     * @type {{RULE_TYPE: boolean}}\n     */\n    const RULE_TYPE = [\n        'rule',\n        'template'\n    ];\n\n    const ACTION = [\n        'SHOW_CONTEXT',\n        'SET_CONTEXT',\n    ];\n\n    const RULE_FORCED_TYPE = {\n        FORCED: 0,\n        NONFORCED: 1, \n    } \n\n    return {\n\n        init: function() {\n            var module = this;\n            var idtemplate;\n            $('#assignTemplateModal').on('show.bs.modal', function (event) {\n                var button = $(event.relatedTarget);\n                idtemplate = button.data('idtemplate');\n                var isRuleForced;\n                var htmlRuleForced;\n\n                let ruleCard = $('div[id=\"card-' + idtemplate + '\"]');\n                $('#assignTemplateModal #forced-content').empty();\n                if (ruleCard.data('type') === RULE_TYPE[0]) {\n                    isRuleForced = ruleCard.data('forced');\n                    str.get_string('assignforced', 'local_notificationsagent').then(forcedRule => {\n                        htmlRuleForced = '<div class=\"custom-control custom-checkbox mr-1\">';\n                            htmlRuleForced += '<input id=\"forced\" type=\"checkbox\" class=\"custom-control-input\">';\n                            htmlRuleForced += '<label class=\"custom-control-label\" for=\"forced\">'+forcedRule+'</label>';\n                        htmlRuleForced += '</div>';\n                        $('#assignTemplateModal #forced-content').append(htmlRuleForced);\n                        if (!isRuleForced) {\n                            $('#assignTemplateModal #forced-content #forced').prop('checked', true);\n                        }\n                    });\n                }\n    \n                var modal = $(this);\n                modal.find('.modal-title > span').text($('#card-'+idtemplate+' .badge-type').text());\n                modal.find('.badge').text($('#card-'+idtemplate+' .badge-type').text());\n                modal.find('.badge').attr('class', 'mr-2 '+$('#card-'+idtemplate+' .badge-type').attr('class'));\n                \n                modal.find('.modal-body .name').text($('#card-'+idtemplate+' .name').text());\n\n                /* Rellenar cursos asignados */\n                $.ajax({\n                    type: \"POST\",\n                    url: '/local/notificationsagent/assignrule.php',\n                    data: {\n                        ruleid: idtemplate,\n                        action: ACTION[0]\n                    },\n                    success: function(data) {\n                        data['category'].forEach((categoryid) => {\n                            let category = $('#assignTemplateModal .category-listing input#checkboxcategory-' + categoryid);\n                            if (category.length) {\n                                category.prop('checked', true);\n                                $('#category-listing-content-' + categoryid + ' input[type=\"checkbox\"]').prop(\"checked\", true);\n                                $('#listitem-category-' + categoryid + ' input[type=\"checkbox\"]').prop(\"checked\", true);\n                            }\n                        });\n\n                        data['course'].forEach((courseid) => {\n                            let course = $('#assignTemplateModal .category-listing input#checkboxcourse-' + courseid);\n                            if (course.length) {\n                                course.prop('checked', true);\n                            }\n                        });\n                    },\n                    error: function(XMLHttpRequest, textStatus, errorThrown) { \n                        console.log(\"Status: \" + textStatus); \n                        console.log(errorThrown); \n                    },\n                    dataType: 'json'\n                });\n            });\n            $('#assignTemplateModal').on('hide.bs.modal', function () {\n                $('#assignTemplateModal .custom-control-input').prop('checked', false);\n            });\n            $('#assignTemplateModal .collapse').on('show.bs.collapse', function () {\n                $(this).parents('.listitem-category').removeClass('collapsed');\n            });\n            $('#assignTemplateModal .collapse').on('hide.bs.collapse', function () {\n                $(this).parents('.listitem-category').addClass('collapsed');\n            });\n\n            /* checkbox */\n            $('#assignTemplateModal #course-category-select-all').on('click', function(){\n                var checkassign = $('#assignTemplateModal .category-listing .custom-control-input');\n                checkassign.prop('checked', $(this).prop('checked'));\n            });\n            $('#assignTemplateModal .category-listing').on('change', 'input[type=checkbox]', function () {\n                var checkssubcategoriescourses = '#category-listing-content-'+$(this).attr(\"id\").replace('checkboxcategory-', '')+' .custom-control-input';\n                $('#assignTemplateModal .category-listing '+checkssubcategoriescourses).prop('checked', $(this).prop('checked'));\n            });\n\n            $('#assignTemplateModal #saveassignTemplateModal').on('click', function() {\n                var data = {};\n                data['category'] = [];\n                data['course'] = [];\n                var allCategories = [];\n\n                forced = RULE_FORCED_TYPE.NONFORCED;\n                if ($('#assignTemplateModal #forced').prop('checked')) {\n                    forced = RULE_FORCED_TYPE.FORCED;\n                }\n\n                let mainCategories = $('#assignTemplateModal #category-listing-content-0 > li[id^=\"listitem-category-\"]').has('input[id^=\"checkboxcategory-\"]:checked');\n\n                mainCategories.each(function() {\n                    let items = $('#' + this.id + ' input[id^=\"checkboxcategory-\"]:checked').map(function() {\n                        let id = $(this).attr('id').replace('checkboxcategory-', '');\n                        let parent = $(this).data('parent').replace('#category-listing-content-', '');\n\n                        if ($.inArray(id, allCategories) === -1) {\n                            allCategories.push(id);\n                        }\n                        \n                        return {id: id, parent: parent};\n                    }).get();\n\n                    var parents = $.map(items, function(item) {\n                        return item.id;\n                    });\n\n                    $.grep(items, function(item) {\n                        if ($.inArray(item.parent, parents) === -1) {\n                            data['category'].push(item.id);\n                        }\n                    });\n                });\n\n                let courses = $('#assignTemplateModal .category-listing input[id^=\"checkboxcourse-\"]:checked').map(function() {\n                    let id = $(this).attr('id').replace('checkboxcourse-', '');\n                    let category = $(this).data('parent').replace('#category-listing-content-', '');\n                    \n                    return {id: id, category: category};\n                }).get();\n\n                if ($.isEmptyObject(data['category'])) {\n                    $.each(courses, function(index, course) {\n                        data['course'].push(course.id);\n                    });\n                } else {\n                    $.grep(courses, function(course) {\n                        if ($.inArray(course.category, allCategories) === -1) {\n                            data['course'].push(course.id);\n                        }\n                    });\n                }\n\n                $.ajax({\n                    type: \"POST\",\n                    url: '/local/notificationsagent/assignrule.php',\n                    data: {\n                        ruleid: idtemplate,\n                        category: data['category'],\n                        course: data['course'],\n                        forced: forced,\n                        action: ACTION[1]\n                    },\n                    success: function() {\n                        window.location.reload();  \n                    },\n                    error: function(XMLHttpRequest, textStatus, errorThrown) { \n                        console.log(\"Status: \" + textStatus); \n                        console.log(errorThrown); \n                    },\n                    dataType: 'json'\n                });\n                   \n            });\n        },\n        loopatfirstparent: function(idparent, arrayParents = []){\n            var module = this;\n            \n            if(idparent != '#category-listing-content-0'){\n                arrayParents.push(idparent.replace('#category-listing-content-', ''));\n                var dataparent = $('#assignTemplateModal .category-listing #listitem-category-'+idparent.replace('#category-listing-content-', '')+' > .category-listing-header .custom-control-input').attr('data-parent');\n                return module.loopatfirstparent(dataparent, arrayParents);\n            }else{\n                return arrayParents;\n            }\n        }\n    };\n});\n"],"names":["define","str","RULE_TYPE","ACTION","RULE_FORCED_TYPE","init","idtemplate","$","on","event","isRuleForced","htmlRuleForced","button","relatedTarget","data","ruleCard","empty","get_string","then","forcedRule","append","prop","modal","this","find","text","attr","ajax","type","url","ruleid","action","success","forEach","categoryid","category","length","courseid","course","error","XMLHttpRequest","textStatus","errorThrown","console","log","dataType","parents","removeClass","addClass","checkssubcategoriescourses","replace","allCategories","forced","has","each","items","id","map","parent","inArray","push","get","item","grep","courses","isEmptyObject","index","window","location","reload","loopatfirstparent","idparent","arrayParents","module","dataparent"],"mappings":";;;;;;AAsBAA,8DAAO,CAAC,aAAa,SAASC,WAMpBC,UAAY,CACd,OACA,YAGEC,OAAS,CACX,eACA,eAGEC,wBACM,EADNA,2BAES,QAGR,CAEHC,KAAM,eAEEC,WACJC,EAAE,wBAAwBC,GAAG,iBAAiB,SAAUC,WAGhDC,aACAC,eAHAC,OAASL,EAAEE,MAAMI,eACrBP,WAAaM,OAAOE,KAAK,kBAIrBC,SAAWR,EAAE,gBAAkBD,WAAa,MAChDC,EAAE,wCAAwCS,QACtCD,SAASD,KAAK,UAAYZ,UAAU,KACpCQ,aAAeK,SAASD,KAAK,UAC7Bb,IAAIgB,WAAW,eAAgB,4BAA4BC,MAAKC,aAC5DR,eAAiB,oDACbA,gBAAkB,mEAClBA,gBAAkB,oDAAoDQ,WAAW,WACrFR,gBAAkB,SAClBJ,EAAE,wCAAwCa,OAAOT,gBAC5CD,cACDH,EAAE,gDAAgDc,KAAK,WAAW,WAK1EC,MAAQf,EAAEgB,MACdD,MAAME,KAAK,uBAAuBC,KAAKlB,EAAE,SAASD,WAAW,gBAAgBmB,QAC7EH,MAAME,KAAK,UAAUC,KAAKlB,EAAE,SAASD,WAAW,gBAAgBmB,QAChEH,MAAME,KAAK,UAAUE,KAAK,QAAS,QAAQnB,EAAE,SAASD,WAAW,gBAAgBoB,KAAK,UAEtFJ,MAAME,KAAK,qBAAqBC,KAAKlB,EAAE,SAASD,WAAW,UAAUmB,QAGrElB,EAAEoB,KAAK,CACHC,KAAM,OACNC,IAAK,2CACLf,KAAM,CACFgB,OAAQxB,WACRyB,OAAQ5B,OAAO,IAEnB6B,QAAS,SAASlB,MACdA,KAAI,SAAamB,SAASC,iBAClBC,SAAW5B,EAAE,iEAAmE2B,YAChFC,SAASC,SACTD,SAASd,KAAK,WAAW,GACzBd,EAAE,6BAA+B2B,WAAa,2BAA2Bb,KAAK,WAAW,GACzFd,EAAE,sBAAwB2B,WAAa,2BAA2Bb,KAAK,WAAW,OAI1FP,KAAI,OAAWmB,SAASI,eAChBC,OAAS/B,EAAE,+DAAiE8B,UAC5EC,OAAOF,QACPE,OAAOjB,KAAK,WAAW,OAInCkB,MAAO,SAASC,eAAgBC,WAAYC,aACxCC,QAAQC,IAAI,WAAaH,YACzBE,QAAQC,IAAIF,cAEhBG,SAAU,YAGlBtC,EAAE,wBAAwBC,GAAG,iBAAiB,WAC1CD,EAAE,8CAA8Cc,KAAK,WAAW,MAEpEd,EAAE,kCAAkCC,GAAG,oBAAoB,WACvDD,EAAEgB,MAAMuB,QAAQ,sBAAsBC,YAAY,gBAEtDxC,EAAE,kCAAkCC,GAAG,oBAAoB,WACvDD,EAAEgB,MAAMuB,QAAQ,sBAAsBE,SAAS,gBAInDzC,EAAE,oDAAoDC,GAAG,SAAS,WAC5CD,EAAE,gEACRc,KAAK,UAAWd,EAAEgB,MAAMF,KAAK,eAE7Cd,EAAE,0CAA0CC,GAAG,SAAU,wBAAwB,eACzEyC,2BAA6B,6BAA6B1C,EAAEgB,MAAMG,KAAK,MAAMwB,QAAQ,oBAAqB,IAAI,yBAClH3C,EAAE,0CAA0C0C,4BAA4B5B,KAAK,UAAWd,EAAEgB,MAAMF,KAAK,eAGzGd,EAAE,iDAAiDC,GAAG,SAAS,eACvDM,KAAO,CACXA,SAAmB,GACnBA,OAAiB,IACbqC,cAAgB,GAEpBC,OAAShD,2BACLG,EAAE,gCAAgCc,KAAK,aACvC+B,OAAShD,yBAGQG,EAAE,mFAAmF8C,IAAI,0CAE/FC,MAAK,eACZC,MAAQhD,EAAE,IAAMgB,KAAKiC,GAAK,2CAA2CC,KAAI,eACrED,GAAKjD,EAAEgB,MAAMG,KAAK,MAAMwB,QAAQ,oBAAqB,IACrDQ,OAASnD,EAAEgB,MAAMT,KAAK,UAAUoC,QAAQ,6BAA8B,WAEpC,IAAlC3C,EAAEoD,QAAQH,GAAIL,gBACdA,cAAcS,KAAKJ,IAGhB,CAACA,GAAIA,GAAIE,OAAQA,WACzBG,UAECf,QAAUvC,EAAEkD,IAAIF,OAAO,SAASO,aACzBA,KAAKN,MAGhBjD,EAAEwD,KAAKR,OAAO,SAASO,OACsB,IAArCvD,EAAEoD,QAAQG,KAAKJ,OAAQZ,UACvBhC,KAAI,SAAa8C,KAAKE,KAAKN,cAKnCQ,QAAUzD,EAAE,+EAA+EkD,KAAI,iBAIxF,CAACD,GAHCjD,EAAEgB,MAAMG,KAAK,MAAMwB,QAAQ,kBAAmB,IAGvCf,SAFD5B,EAAEgB,MAAMT,KAAK,UAAUoC,QAAQ,6BAA8B,QAG7EW,MAECtD,EAAE0D,cAAcnD,KAAI,UACpBP,EAAE+C,KAAKU,SAAS,SAASE,MAAO5B,QAC5BxB,KAAI,OAAW8C,KAAKtB,OAAOkB,OAG/BjD,EAAEwD,KAAKC,SAAS,SAAS1B,SAC8B,IAA/C/B,EAAEoD,QAAQrB,OAAOH,SAAUgB,gBAC3BrC,KAAI,OAAW8C,KAAKtB,OAAOkB,OAKvCjD,EAAEoB,KAAK,CACHC,KAAM,OACNC,IAAK,2CACLf,KAAM,CACFgB,OAAQxB,WACR6B,SAAUrB,KAAI,SACdwB,OAAQxB,KAAI,OACZsC,OAAQA,OACRrB,OAAQ5B,OAAO,IAEnB6B,QAAS,WACLmC,OAAOC,SAASC,UAEpB9B,MAAO,SAASC,eAAgBC,WAAYC,aACxCC,QAAQC,IAAI,WAAaH,YACzBE,QAAQC,IAAIF,cAEhBG,SAAU,aAKtByB,kBAAmB,SAASC,cAAUC,oEAAe,OAC7CC,OAASlD,QAEE,+BAAZgD,SAA0C,CACzCC,aAAaZ,KAAKW,SAASrB,QAAQ,6BAA8B,SAC7DwB,WAAanE,EAAE,6DAA6DgE,SAASrB,QAAQ,6BAA8B,IAAI,qDAAqDxB,KAAK,sBACtL+C,OAAOH,kBAAkBI,WAAYF,qBAErCA"}