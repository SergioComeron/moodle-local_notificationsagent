{"version":3,"file":"sort_rule_cards.min.js","sources":["../../src/rule/sort_rule_cards.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <https://www.gnu.org/licenses/>.\n// Project implemented by the \\\"Recovery, Transformation and Resilience Plan.\n// Funded by the European Union - Next GenerationEU\\\".\n//\n// Produced by the UNIMOODLE University Group: Universities of\n// Valladolid, Complutense de Madrid, UPV/EHU, León, Salamanca,\n// Illes Balears, Valencia, Rey Juan Carlos, La Laguna, Zaragoza, Málaga,\n// Córdoba, Extremadura, Vigo, Las Palmas de Gran Canaria y Burgos.\n\n/**\n * Version details\n *\n * @package    local_notificationsagent\n * @copyright  2023 Proyecto UNIMOODLE\n * @author     UNIMOODLE Group (Coordinator) <direccion.area.estrategia.digital@uva.es>\n * @author     ISYC <soporte@isyc.com>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\nimport {saveOrderSession} from 'local_notificationsagent/rule/repository';\n\n/**\n * Selectors for the sort select options.\n *\n * @property {string} sortButtonId The element ID of the Sort Rule button.\n * @property {string} selectOptionId The element ID of the Sort select Rule option.\n */\nconst selectors = {\n    sortButtonId: 'applyordergroupbtn',\n    selectOptionId: 'orderrulesid'\n};\n\n\n/**\n * Initialises the Sort rules Rule module.\n *\n * @method init\n */\nexport const init = async () => {\n    await getOrderSession();\n    saveOrderSessionId();\n};\n\n\n/**\n * \n * Save key rule ordenation.\n * \n */\nconst saveOrderSessionId = async() => {\n    let buttonapplysort = document.getElementById(selectors.sortButtonId);\n    buttonapplysort.addEventListener('click', async() => {\n        let orderId = document.getElementById(selectors.selectOptionId).value;\n        let sessionName = 'orderId';\n        response = await saveOrderSession(sessionName, orderId);\n        location.reload();\n    });\n\n};\n\n\n/**\n * \n * Save key rule ordenation.\n * \n */\nconst getOrderSession = async() => {\n        let orderId = -1;\n        let sessionName = 'orderid';\n\n        response = await saveOrderSession(sessionName, orderId);\n        if(response.orderid != -1) {\n            let select = document.getElementById('orderrulesid');\n                let array = [];\n                select.options.forEach((element) => {\n                    array.push(element.value);\n                });\n                if (array.includes(response.orderid.toString())) {\n                    select.value = response.orderid;\n                } else {\n                    select.value = array[0];\n                }\n        }\n\n};\n\n\n"],"names":["selectors","async","getOrderSession","saveOrderSessionId","document","getElementById","addEventListener","orderId","value","response","location","reload","orderid","select","array","options","forEach","element","push","includes","toString"],"mappings":";;;;;;;;;;MAwCMA,uBACY,qBADZA,yBAEc,6BASAC,gBACVC,kBACNC,4BASEA,mBAAqBF,UACDG,SAASC,eAAeL,wBAC9BM,iBAAiB,SAASL,cAClCM,QAAUH,SAASC,eAAeL,0BAA0BQ,MAEhEC,eAAiB,gCADC,UAC6BF,SAC/CG,SAASC,aAWXT,gBAAkBD,aAIhBQ,eAAiB,gCAFC,WADH,IAIS,GAArBA,SAASG,QAAe,KACnBC,OAAST,SAASC,eAAe,gBAC7BS,MAAQ,GACZD,OAAOE,QAAQC,SAASC,UACpBH,MAAMI,KAAKD,QAAQT,UAEnBM,MAAMK,SAASV,SAASG,QAAQQ,YAChCP,OAAOL,MAAQC,SAASG,QAExBC,OAAOL,MAAQM,MAAM"}