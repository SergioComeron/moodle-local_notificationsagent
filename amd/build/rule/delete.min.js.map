{"version":3,"file":"delete.min.js","sources":["../../src/rule/delete.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <https://www.gnu.org/licenses/>.\n\n/**\n * @module    local_notificationsagent/rule/delete\n * @copyright 2023 ISYC <soporte@isyc.com>\n * @license   http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\nimport {get_string as getString} from 'core/str';\nimport Notification from 'core/notification';\nimport ModalFactory from 'core/modal_factory';\nimport ModalEvents from 'core/modal_events';\nimport Templates from 'core/templates';\nimport {checkRuleContext, deleteRule} from 'local_notificationsagent/rule/repository';\n\n/**\n * Selectors for the Delete Button.\n *\n * @property {string} deleteRuleId The element ID of the Delete Rule button.\n */\nconst selectors = {\n    deleteRuleId: '[id^=\"delete-rule-\"]:not(.disabled)',\n};\n\n/**\n * Initialises the Delete Rule module.\n *\n * @method init\n */\nexport const init = async () => {\n    let deleteItems = document.querySelectorAll(selectors.deleteRuleId);\n\n    deleteItems.forEach((deleteItem) => {\n        deleteItem.addEventListener('click', async function(e) {\n            await showModal(deleteItem);\n        });\n    });   \n};\n\n/**\n * \n * Shows the delete modal for a given rule.\n * \n * @param {HTMLElement} deleteItem\n * @returns {Promise<void>}\n */\nconst showModal = async (deleteItem) => {\n    let ruleObj = {};\n    \n    ruleObj.id = deleteItem.dataset.ruleid;\n    ruleObj.type = deleteItem.dataset.type;\n    ruleObj.title = document.querySelector('#card-' + ruleObj.id + ' .name').textContent;\n\n    hasRuleContext(deleteItem).then(hasContext => {\n        ruleObj.hascontext = hasContext;\n\n        ModalFactory.create({\n            type: ModalFactory.types.SAVE_CANCEL,\n            title: getString('deletetitle', 'local_notificationsagent', ruleObj),\n            body: Templates.render('local_notificationsagent/modal/delete', {\n                rule: ruleObj,\n            }),\n        }).then(function(modal) {\n            modal.setSaveButtonText(getString('delete'));\n\n            // Handle save event.\n            modal.getRoot().on(ModalEvents.save, function() {\n                setDeleteRule(ruleObj.id);\n            });\n\n            // Handle hidden event.\n            modal.getRoot().on(ModalEvents.hidden, function() {\n                // Destroy when hidden.\n                modal.destroy();\n            });\n\n            modal.show();\n    \n            return true;\n        }).catch(Notification.exception);\n    });\n};\n\n/**\n * Checks if the rule has any other context before deleting\n * \n * @param {HTMLElement} deleteItem Card rule element.\n * @returns {boolean} Has it context?\n */\nconst hasRuleContext = async(deleteItem) => {\n    let id = deleteItem.dataset.ruleid;\n    let hasContext = false;\n\n    try {\n        response = await checkRuleContext(id);\n        \n        if ($.isEmptyObject(response['warnings'])) {\n            hasContext = response['hascontext'];\n        } else {\n            Notification.addNotification({\n                message: response['warnings'][0].message,\n                type: 'error'\n            });\n        }\n    } catch (exception) {\n        Notification.exception(exception);\n    }\n\n    return hasContext;\n};\n\n/**\n * Deletes a given rule.\n * \n * @param {Integer} id Rule id.\n * @returns {Promise<void>}\n */\nconst setDeleteRule = async(id) => {\n    try {\n        response = await deleteRule(id);\n        \n        if ($.isEmptyObject(response['warnings'])) {\n            getString('deleteaccept', 'local_notificationsagent').then(ruleDeleted => {\n                document.querySelector('#card-' + id).remove();\n               \n                Notification.addNotification({\n                    message: ruleDeleted,\n                    type: 'info'\n                }); \n            });\n        } else {\n            Notification.addNotification({\n                message: response['warnings'][0].message,\n                type: 'error'\n            });\n        }\n    } catch (exception) {\n        Notification.exception(exception);\n    }\n};\n"],"names":["selectors","async","document","querySelectorAll","forEach","deleteItem","addEventListener","e","showModal","ruleObj","id","dataset","ruleid","type","title","querySelector","textContent","hasRuleContext","then","hasContext","hascontext","create","ModalFactory","types","SAVE_CANCEL","body","Templates","render","rule","modal","setSaveButtonText","getRoot","on","ModalEvents","save","setDeleteRule","hidden","destroy","show","catch","Notification","exception","response","$","isEmptyObject","addNotification","message","ruleDeleted","remove"],"mappings":";;;;;oSAiCMA,uBACY,oDAQEC,UACEC,SAASC,iBAAiBH,wBAEhCI,SAASC,aACjBA,WAAWC,iBAAiB,SAASL,eAAeM,SAC1CC,UAAUH,yBAYtBG,UAAYP,MAAAA,iBACVQ,QAAU,GAEdA,QAAQC,GAAKL,WAAWM,QAAQC,OAChCH,QAAQI,KAAOR,WAAWM,QAAQE,KAClCJ,QAAQK,MAAQZ,SAASa,cAAc,SAAWN,QAAQC,GAAK,UAAUM,YAEzEC,eAAeZ,YAAYa,MAAKC,aAC5BV,QAAQW,WAAaD,kCAERE,OAAO,CAChBR,KAAMS,uBAAaC,MAAMC,YACzBV,OAAO,mBAAU,cAAe,2BAA4BL,SAC5DgB,KAAMC,mBAAUC,OAAO,wCAAyC,CAC5DC,KAAMnB,YAEXS,MAAK,SAASW,cACbA,MAAMC,mBAAkB,mBAAU,WAGlCD,MAAME,UAAUC,GAAGC,sBAAYC,MAAM,WACjCC,cAAc1B,QAAQC,OAI1BmB,MAAME,UAAUC,GAAGC,sBAAYG,QAAQ,WAEnCP,MAAMQ,aAGVR,MAAMS,QAEC,KACRC,MAAMC,sBAAaC,eAUxBxB,eAAiBhB,MAAAA,iBACfS,GAAKL,WAAWM,QAAQC,OACxBO,YAAa,MAGbuB,eAAiB,gCAAiBhC,IAE9BiC,EAAEC,cAAcF,SAAQ,UACxBvB,WAAauB,SAAQ,iCAERG,gBAAgB,CACzBC,QAASJ,SAAQ,SAAa,GAAGI,QACjCjC,KAAM,UAGhB,MAAO4B,iCACQA,UAAUA,kBAGpBtB,YASLgB,cAAgBlC,MAAAA,SAEdyC,eAAiB,0BAAWhC,IAExBiC,EAAEC,cAAcF,SAAQ,8BACd,eAAgB,4BAA4BxB,MAAK6B,cACvD7C,SAASa,cAAc,SAAWL,IAAIsC,+BAEzBH,gBAAgB,CACzBC,QAASC,YACTlC,KAAM,kCAIDgC,gBAAgB,CACzBC,QAASJ,SAAQ,SAAa,GAAGI,QACjCjC,KAAM,UAGhB,MAAO4B,iCACQA,UAAUA"}