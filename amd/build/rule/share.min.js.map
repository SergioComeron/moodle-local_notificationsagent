{"version":3,"file":"share.min.js","sources":["../../src/rule/share.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <https://www.gnu.org/licenses/>.\n// Project implemented by the \\\"Recovery, Transformation and Resilience Plan.\n// Funded by the European Union - Next GenerationEU\\\".\n//\n// Produced by the UNIMOODLE University Group: Universities of\n// Valladolid, Complutense de Madrid, UPV/EHU, León, Salamanca,\n// Illes Balears, Valencia, Rey Juan Carlos, La Laguna, Zaragoza, Málaga,\n// Córdoba, Extremadura, Vigo, Las Palmas de Gran Canaria y Burgos.\n\n/**\n * Version details\n *\n * @package    local_notificationsagent\n * @copyright  2023 Proyecto UNIMOODLE\n * @author     UNIMOODLE Group (Coordinator) <direccion.area.estrategia.digital@uva.es>\n * @author     ISYC <soporte@isyc.com>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\nimport {get_string as getString} from 'core/str';\nimport Notification from 'core/notification';\nimport ModalFactory from 'core/modal_factory';\nimport ModalEvents from 'core/modal_events';\nimport Templates from 'core/templates';\nimport {updateRuleShare} from 'local_notificationsagent/rule/repository';\nimport ajax from 'core/ajax';\n/**\n * Types of rule sharing.\n * \n * @type {{SHARING_TYPE: boolean}}\n */\nconst SHARING_TYPE = {\n    SHARED: 0,\n    UNSHARED: 1,\n};\n\n/**\n * Selectors for the Share Button.\n *\n * @property {string} shareRuleId The element ID of the Share Rule button.\n */\nconst selectors = {\n    shareRuleId: '[id^=\"share-rule-\"]:not(.disabled)',\n    shareRuleDataShared: 'data-shared',\n};\n\n/**\n * Initialises the Share Rule module.\n *\n * @method init\n */\nexport const init = async () => {\n    let shareItems = document.querySelectorAll(selectors.shareRuleId);\n\n    shareItems.forEach((shareItem) => {\n        shareItem.addEventListener('click', async function(e) {\n            await showModal(shareItem);\n        });\n    });   \n};\n\n/**\n * \n * Shows the share modal for a given rule.\n * \n * @param {HTMLElement} shareItem\n * @returns {Promise<void>}\n */\nconst showModal = async (shareItem) => {\n    let ruleObj = {};\n    \n    ruleObj.id = shareItem.dataset.ruleid;\n    ruleObj.title = document.querySelector('#card-' + ruleObj.id + ' .name').textContent;\n    ruleObj.shared = shareItem.dataset.shared == SHARING_TYPE.SHARED ? SHARING_TYPE.SHARED : SHARING_TYPE.UNSHARED;\n\n    if (!ruleObj.shared) {\n        ruleObj.name = await getString('unsharetitle', 'local_notificationsagent', ruleObj);\n    } else {\n        ruleObj.name = await getString('sharetitle', 'local_notificationsagent', ruleObj);\n    }\n    \n    ModalFactory.create({\n        type: ModalFactory.types.SAVE_CANCEL,\n        title: ruleObj.name,\n        body: Templates.render('local_notificationsagent/modal/share', {\n            rule: ruleObj,\n        }),\n    }).then(function(modal) {\n        let isShared = !ruleObj.shared ? SHARING_TYPE.UNSHARED : SHARING_TYPE.SHARED;\n        let shareBtnText = isShared ? getString('editrule_unsharerule', 'local_notificationsagent') : getString('editrule_sharerule', 'local_notificationsagent');\n\n        modal.setSaveButtonText(shareBtnText);\n\n        // Handle save event.\n        modal.getRoot().on(ModalEvents.save, function() {\n            setRuleShare(ruleObj.id, isShared);\n        });\n\n        // Handle hidden event.\n        modal.getRoot().on(ModalEvents.hidden, function() {\n            // Destroy when hidden.\n            modal.destroy();\n        });\n\n        modal.show();\n\n        return true;\n    });\n};\n\n/**\n * Changes the sharing status for a given rule.\n * \n * @param {integer} id Rule id.\n * @param {boolean} shared Rule shared type.\n * @returns {Promise<void>}\n */\nconst setRuleShare = async(id, shared) => {\n    try {\n        response = await updateRuleShare(id, shared);\n\n        if ($.isEmptyObject(response['warnings'])) {\n            let shareItem = document.querySelector('a#share-rule-' + id);\n            let shareItemIcon = document.createElement('i');\n            let shareItemText = '';\n            let shareItemMessage = '';\n            let shareItemTag= document.querySelector('div#card-'+id).querySelector('span.badge');\n            if (!shared) {\n                shareItemTag.textContent = await getString('type_sharedrule', 'local_notificationsagent');\n                shareItemTag.classList.add(\"shared\");\n                shareItemText = await getString('editrule_unsharerule', 'local_notificationsagent');\n                shareItem.setAttribute(selectors.shareRuleDataShared, SHARING_TYPE.SHARED);\n                shareItemIcon.className = 'fa fa-chain-broken mr-2';\n                shareItemMessage = await getString('shareaccept', 'local_notificationsagent');\n            } else {\n                shareItemTag.textContent = await getString('type_rule', 'local_notificationsagent');\n                shareItemTag.classList.remove(\"shared\");\n                shareItemText = await getString('editrule_sharerule', 'local_notificationsagent');\n                shareItem.setAttribute(selectors.shareRuleDataShared, SHARING_TYPE.UNSHARED);\n                shareItemIcon.className = 'fa fa-link mr-2';\n                shareItemMessage = await getString('unshareaccept', 'local_notificationsagent');\n            }\n\n            shareItem.innerHTML = '';\n            shareItem.appendChild(shareItemIcon);\n            shareItem.appendChild(document.createTextNode(shareItemText));\n\n            Notification.addNotification({\n                message: shareItemMessage,\n                type: 'info'\n            });\n        } else {\n            Notification.addNotification({\n                message: response['warnings'][0].message,\n                type: 'error'\n            });\n        }\n    } catch (exception) {\n        Notification.exception(exception);\n    }\n};"],"names":["SHARING_TYPE","selectors","async","document","querySelectorAll","forEach","shareItem","addEventListener","e","showModal","ruleObj","id","dataset","ruleid","title","querySelector","textContent","shared","name","create","type","ModalFactory","types","SAVE_CANCEL","body","Templates","render","rule","then","modal","isShared","shareBtnText","setSaveButtonText","getRoot","on","ModalEvents","save","setRuleShare","hidden","destroy","show","response","$","isEmptyObject","shareItemIcon","createElement","shareItemText","shareItemMessage","shareItemTag","classList","remove","setAttribute","className","add","innerHTML","appendChild","createTextNode","addNotification","message","exception"],"mappings":";;;;;;;;;wUA4CMA,oBACM,EADNA,sBAEQ,EAQRC,sBACW,qCADXA,8BAEmB,4BAQLC,UACCC,SAASC,iBAAiBH,uBAEhCI,SAASC,YAChBA,UAAUC,iBAAiB,SAASL,eAAeM,SACzCC,UAAUH,wBAYtBG,UAAYP,MAAAA,gBACVQ,QAAU,GAEdA,QAAQC,GAAKL,UAAUM,QAAQC,OAC/BH,QAAQI,MAAQX,SAASY,cAAc,SAAWL,QAAQC,GAAK,UAAUK,YACzEN,QAAQO,OAASX,UAAUM,QAAQK,QAAUjB,oBAAsBA,oBAAsBA,sBAEpFU,QAAQO,OAGTP,QAAQQ,WAAa,mBAAU,aAAc,2BAA4BR,SAFzEA,QAAQQ,WAAa,mBAAU,eAAgB,2BAA4BR,gCAKlES,OAAO,CAChBC,KAAMC,uBAAaC,MAAMC,YACzBT,MAAOJ,QAAQQ,KACfM,KAAMC,mBAAUC,OAAO,uCAAwC,CAC3DC,KAAMjB,YAEXkB,MAAK,SAASC,WACTC,SAAYpB,QAAQO,OAAiCjB,oBAAxBA,sBAC7B+B,aAAeD,UAAW,mBAAU,uBAAwB,6BAA8B,mBAAU,qBAAsB,mCAE9HD,MAAMG,kBAAkBD,cAGxBF,MAAMI,UAAUC,GAAGC,sBAAYC,MAAM,WACjCC,aAAa3B,QAAQC,GAAImB,aAI7BD,MAAMI,UAAUC,GAAGC,sBAAYG,QAAQ,WAEnCT,MAAMU,aAGVV,MAAMW,QAEC,MAWTH,aAAenC,MAAMS,GAAIM,iBAEvBwB,eAAiB,+BAAgB9B,GAAIM,QAEjCyB,EAAEC,cAAcF,SAAQ,UAAe,KACnCnC,UAAYH,SAASY,cAAc,gBAAkBJ,IACrDiC,cAAgBzC,SAAS0C,cAAc,KACvCC,cAAgB,GAChBC,iBAAmB,GACnBC,aAAc7C,SAASY,cAAc,YAAYJ,IAAII,cAAc,cAClEE,QAQD+B,aAAahC,kBAAoB,mBAAU,YAAa,4BACxDgC,aAAaC,UAAUC,OAAO,UAC9BJ,oBAAsB,mBAAU,qBAAsB,4BACtDxC,UAAU6C,aAAalD,8BAA+BD,uBACtD4C,cAAcQ,UAAY,kBAC1BL,uBAAyB,mBAAU,gBAAiB,8BAZpDC,aAAahC,kBAAoB,mBAAU,kBAAmB,4BAC9DgC,aAAaC,UAAUI,IAAI,UAC3BP,oBAAsB,mBAAU,uBAAwB,4BACxDxC,UAAU6C,aAAalD,8BAA+BD,qBACtD4C,cAAcQ,UAAY,0BAC1BL,uBAAyB,mBAAU,cAAe,6BAUtDzC,UAAUgD,UAAY,GACtBhD,UAAUiD,YAAYX,eACtBtC,UAAUiD,YAAYpD,SAASqD,eAAeV,sCAEjCW,gBAAgB,CACzBC,QAASX,iBACT3B,KAAM,oCAGGqC,gBAAgB,CACzBC,QAASjB,SAAQ,SAAa,GAAGiB,QACjCtC,KAAM,UAGhB,MAAOuC,iCACQA,UAAUA"}