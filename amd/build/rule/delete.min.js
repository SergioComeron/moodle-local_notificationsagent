define("local_notificationsagent/rule/delete",["exports","core/str","core/notification","local_notificationsagent/rule/repository"],(function(_exports,_str,_notification,_repository){var obj;
/**
   * @module    local_notificationsagent/rule/delete
   * @copyright 2023 ISYC <soporte@isyc.com>
   * @license   http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later
   */Object.defineProperty(_exports,"__esModule",{value:!0}),_exports.init=void 0,_notification=(obj=_notification)&&obj.__esModule?obj:{default:obj};const RULE_DELETE_TYPE_UNLINKED=0,RULE_DELETE_TYPE_DELETED=1,RULE_UNLINK_STRING=[{key:"unlinkaccept",component:"local_notificationsagent"},{key:"type_template",component:"local_notificationsagent"}];_exports.init=()=>{$("#deleteRuleModal").on("show.bs.modal",(function(e){ruleButton=$(e.relatedTarget);let id=ruleButton.data("ruleid");value=ruleButton.data("value"),value?value=RULE_DELETE_TYPE_DELETED:value=RULE_DELETE_TYPE_UNLINKED;const modal=$(this),requiredStrings=[[{key:"unlinktitle",component:"local_notificationsagent",param:{title:$("#card-"+id+" .name").text()}},{key:"unlinkcontent",component:"local_notificationsagent",param:{title:$("#card-"+id+" .name").text()}}],[{key:"deletetitle",component:"local_notificationsagent",param:{title:$("#card-"+id+" .name").text()}},{key:"deletecontent",component:"local_notificationsagent",param:{title:$("#card-"+id+" .name").text()}}]];(0,_str.get_strings)(requiredStrings[value]).then((_ref=>{let[ruleTitle,ruleContent]=_ref;modal.find(".modal-title").text(ruleTitle),modal.find(".modal-body > div").text(ruleContent)}))})),$("#deleteRuleModal #acceptDeleteRule").on("click",(e=>{e.preventDefault(),value==RULE_DELETE_TYPE_UNLINKED?setUnlinkRule(ruleButton):setDeleteRule(ruleButton)}))};const setUnlinkRule=async ruleButton=>{let id=ruleButton.data("ruleid");$("#deleteRuleModal").modal("hide");try{response=await(0,_repository.unlinkRule)(id),$.isEmptyObject(response.warnings)?(ruleButton.addClass("d-none"),(0,_str.get_strings)(RULE_UNLINK_STRING).then((_ref2=>{let[ruleUnlinked,ruleTemplateType]=_ref2;$('div[id="card-'+id+'"]').find("#card-type").text(ruleTemplateType),$('div[id="card-'+id+'"]').removeClass("card card-rule").addClass("card card-template"),$('div[id="card-'+id+'"]').find("#card-type").removeClass("badge badge-rule").addClass("badge badge-template"),$('a[data-ruleid="'+id+'"][data-target="#deleteRuleModal"][data-value="1"]').removeClass("d-none"),_notification.default.addNotification({message:ruleUnlinked,type:"info"})}))):_notification.default.addNotification({message:response.warnings[0].message,type:"error"})}catch(exception){_notification.default.exception(exception)}},setDeleteRule=async ruleButton=>{let id=ruleButton.data("ruleid");$("#deleteRuleModal").modal("hide");try{response=await(0,_repository.deleteRule)(id),$.isEmptyObject(response.warnings)?(ruleButton.addClass("d-none"),(0,_str.get_string)("deleteaccept","local_notificationsagent").then((ruleDeleted=>{ruleButton.addClass("d-none"),$('div[id="card-'+id+'"]').remove(),_notification.default.addNotification({message:ruleDeleted,type:"info"})}))):_notification.default.addNotification({message:response.warnings[0].message,type:"error"})}catch(exception){_notification.default.exception(exception)}}}));

//# sourceMappingURL=delete.min.js.map