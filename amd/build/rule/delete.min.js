define("local_notificationsagent/rule/delete",["exports","core/str","core/notification","local_notificationsagent/rule/repository"],(function(_exports,_str,_notification,_repository){var obj;
/**
   * @module    local_notificationsagent/rule/delete
   * @copyright 2023 ISYC <soporte@isyc.com>
   * @license   http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later
   */Object.defineProperty(_exports,"__esModule",{value:!0}),_exports.init=void 0,_notification=(obj=_notification)&&obj.__esModule?obj:{default:obj};_exports.init=()=>{$("#deleteRuleModal").on("show.bs.modal",(function(e){ruleButton=$(e.relatedTarget);let id=ruleButton.data("ruleid"),ruleType=ruleButton.data("type");const modal=$(this);hasRuleContext(ruleButton).then((hasContext=>{requiredStrings=hasContext?[{key:"deletetitle",component:"local_notificationsagent",param:{title:$("#card-"+id+" .name").text(),type:ruleType}},{key:"deletecontent_hascontext",component:"local_notificationsagent",param:{title:$("#card-"+id+" .name").text(),type:ruleType}}]:[{key:"deletetitle",component:"local_notificationsagent",param:{title:$("#card-"+id+" .name").text(),type:ruleType}},{key:"deletecontent_nocontext",component:"local_notificationsagent",param:{title:$("#card-"+id+" .name").text(),type:ruleType}}],(0,_str.get_strings)(requiredStrings).then((_ref=>{let[ruleTitle,ruleContent]=_ref;modal.find(".modal-title").text(ruleTitle),modal.find(".modal-body > div").text(ruleContent)}))}))})),$("#deleteRuleModal #acceptDeleteRule").on("click",(e=>{e.preventDefault(),setDeleteRule(ruleButton)}))};const hasRuleContext=async ruleButton=>{let id=ruleButton.data("ruleid"),hasContext=!1;try{response=await(0,_repository.checkRuleContext)(id),$.isEmptyObject(response.warnings)?hasContext=response.hascontext:_notification.default.addNotification({message:response.warnings[0].message,type:"error"})}catch(exception){_notification.default.exception(exception)}return hasContext},setDeleteRule=async ruleButton=>{let id=ruleButton.data("ruleid");$("#deleteRuleModal").modal("hide");try{response=await(0,_repository.deleteRule)(id),$.isEmptyObject(response.warnings)?(ruleButton.addClass("d-none"),(0,_str.get_string)("deleteaccept","local_notificationsagent").then((ruleDeleted=>{ruleButton.addClass("d-none"),$('div[id="card-'+id+'"]').remove(),_notification.default.addNotification({message:ruleDeleted,type:"info"})}))):_notification.default.addNotification({message:response.warnings[0].message,type:"error"})}catch(exception){_notification.default.exception(exception)}}}));

//# sourceMappingURL=delete.min.js.map