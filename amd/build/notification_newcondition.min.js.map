{"version":3,"file":"notification_newcondition.min.js","sources":["../src/notification_newcondition.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Module javascript to place new conditions.\n *\n * @module   mod_simplemod/notification_newcondition\n * @category  Classes - autoloading\n * @copyright 2023, ISYC\n * @license   http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\n define([], function() {\n\n    return {\n\n        init: function() {\n            let newConditionButton = document.querySelector('[id*=\"newcondition_button\"]');\n            newConditionButton.addEventListener('click', function() {\n                let newConditionSelect = document.querySelector('[id*=\"newcondition_select\"]');\n                let $title = newConditionSelect.options[newConditionSelect.selectedIndex].text;\n                let $formDefault = [];\n                \n                if (window.location.href.includes('action=edit')) {\n                    let url = new URL(window.location.href);\n                    var ruleid = url.searchParams.get('ruleid');\n                    if (ruleid) {\n                        $formDefault.push(\"[id]ruleid[/id][value]\"+ruleid+\"[/value]\");\n                    }\n                }\n\n                let formNotif = document.querySelector('form[action*=\"notificationsagent\"].mform');\n                Array.from(formNotif.elements).forEach((element) => {\n                    if(element.id){\n                        $formDefault.push(\"[id]\"+element.id+\"[/id][value]\"+element.value+\"[/value]\");\n                    }\n                });\n                let $elements = JSON.parse(newConditionSelect.value.split(':')[1]);\n                let $name = newConditionSelect.options[newConditionSelect.selectedIndex].value.substring(0, newConditionSelect.options[newConditionSelect.selectedIndex].value.indexOf(':['));\n                let data = {\n                    key: 'condition',\n                    action: 'new',\n                    title: $title,\n                    elements: $elements,\n                    name : $name,\n                    formDefault: $formDefault\n                };\n\n                $.ajax({\n                    type: \"POST\",\n                    url: window.location.pathname.substring(0, '/local/notificationsagent/editrule.php'),\n                    data: data,\n                    success: function(event) {\n                        if(event.state === 'success'){\n                            window.location.reload();\n                        }\n                    },\n                    error: function(XMLHttpRequest, textStatus, errorThrown) { \n                        console.log(\"Status: \" + textStatus); \n                        console.log(errorThrown); \n                    },\n                    dataType: 'json'\n                });      \n            });\n        }\n    }\n});\n"],"names":["define","init","document","querySelector","addEventListener","newConditionSelect","$title","options","selectedIndex","text","$formDefault","window","location","href","includes","ruleid","URL","searchParams","get","push","formNotif","Array","from","elements","forEach","element","id","value","data","key","action","title","JSON","parse","split","name","substring","indexOf","formDefault","$","ajax","type","url","pathname","success","event","state","reload","error","XMLHttpRequest","textStatus","errorThrown","console","log","dataType"],"mappings":";;;;;;;;AAwBCA,4DAAO,IAAI,iBAED,CAEHC,KAAM,WACuBC,SAASC,cAAc,+BAC7BC,iBAAiB,SAAS,eACrCC,mBAAqBH,SAASC,cAAc,+BAC5CG,OAASD,mBAAmBE,QAAQF,mBAAmBG,eAAeC,KACtEC,aAAe,MAEfC,OAAOC,SAASC,KAAKC,SAAS,eAAgB,KAE1CC,OADM,IAAIC,IAAIL,OAAOC,SAASC,MACjBI,aAAaC,IAAI,UAC9BH,QACAL,aAAaS,KAAK,yBAAyBJ,OAAO,gBAItDK,UAAYlB,SAASC,cAAc,4CACvCkB,MAAMC,KAAKF,UAAUG,UAAUC,SAASC,UACjCA,QAAQC,IACPhB,aAAaS,KAAK,OAAOM,QAAQC,GAAG,eAAeD,QAAQE,MAAM,mBAKrEC,KAAO,CACPC,IAAK,YACLC,OAAQ,MACRC,MAAOzB,OACPiB,SANYS,KAAKC,MAAM5B,mBAAmBsB,MAAMO,MAAM,KAAK,IAO3DC,KANQ9B,mBAAmBE,QAAQF,mBAAmBG,eAAemB,MAAMS,UAAU,EAAG/B,mBAAmBE,QAAQF,mBAAmBG,eAAemB,MAAMU,QAAQ,OAOnKC,YAAa5B,cAGjB6B,EAAEC,KAAK,CACHC,KAAM,OACNC,IAAK/B,OAAOC,SAAS+B,SAASP,UAAU,EAAG,0CAC3CR,KAAMA,KACNgB,QAAS,SAASC,OACK,YAAhBA,MAAMC,OACLnC,OAAOC,SAASmC,UAGxBC,MAAO,SAASC,eAAgBC,WAAYC,aACxCC,QAAQC,IAAI,WAAaH,YACzBE,QAAQC,IAAIF,cAEhBG,SAAU"}